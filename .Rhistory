`Out.of.State` = "Out-of-State") |>
tab_style(style = cell_text(weight = "bold"),
locations = list(cells_column_labels(), cells_stub())) |>
tab_style(style = cell_text(color = "steelblue3", style = "italic"),
locations = list(cells_column_labels(columns = "Total"),
cells_body(columns = "Total"),
cells_body(rows = In.State >= 30),
cells_stub(rows = "Total"))) |>
sub_missing(missing_text = "")
30/50*35/50
30/50*35/50*50
20/50*35/50*50
15/50+30/50*50
15/50+20/50*50
(30/50*35/50)*50
(35/50 * 30/50) * 50
(35/50 * 20/50) * 50
(15/50 * 30/50) * 50
(15/50 * 20/50) * 50
data.frame(type = c("Undergrad", "Graduate", "Total"),
`In-State` = c(21, 9, 30),
`Out-of-State` = c(14, 6, 20),
Total = c(35, 15, 50)) |>
gt(rowname_col = "type") |>
cols_label(`In.State` = "In-State",
`Out.of.State` = "Out-of-State") |>
tab_style(style = cell_text(weight = "bold"),
locations = list(cells_column_labels(), cells_stub())) |>
tab_style(style = cell_text(color = "steelblue3", style = "italic"),
locations = list(cells_column_labels(columns = "Total"),
cells_body(),
cells_stub())) |>
sub_missing(missing_text = "")
data.frame(type = c("Undergrad", "Graduate", "Total"),
`In-State` = c(21, 9, 30),
`Out-of-State` = c(14, 6, 20),
Total = c(35, 15, 50)) |>
gt(rowname_col = "type") |>
cols_label(`In.State` = "In-State",
`Out.of.State` = "Out-of-State") |>
tab_style(style = cell_text(weight = "bold"),
locations = list(cells_column_labels(), cells_stub())) |>
tab_style(style = cell_text(color = "steelblue3", style = "italic"),
locations = list(cells_column_labels(),
cells_body(),
cells_stub())) |>
sub_missing(missing_text = "")
data.frame(type = c("Undergrad", "Graduate"),
`In-State` = c(25, 5),
`Out-of-State` = c(10, 10),
Total = c(35, 15, 50))
data.frame(type = c("Undergrad", "Graduate"),
`In-State` = c(25, 5),
`Out-of-State` = c(10, 10))
data.frame(type = c("Undergrad", "Graduate"),
`In-State` = c(25, 5),
`Out-of-State` = c(10, 10)) |>
chisq.test( )
data.frame(`In-State` = c(25, 5),
`Out-of-State` = c(10, 10)) |>
chisq.test( )
data.frame(type = c("Undergrad", "Graduate", "Total"),
`In-State` = c(25, 5, 30),
`Out-of-State` = c(10, 10, 20),
Total = c(35, 15, 50))
data.frame(type = c("Undergrad", "Graduate", "Total"),
`In-State` = c(21, 9, 30),
`Out-of-State` = c(14, 6, 20),
Total = c(35, 15, 50)) |>
gt(rowname_col = "type") |>
cols_label(`In.State` = "In-State",
`Out.of.State` = "Out-of-State") |>
tab_style(style = cell_text(weight = "bold"),
locations = list(cells_column_labels(), cells_stub())) |>
tab_style(style = cell_text(color = "steelblue3", style = "italic"),
locations = list(cells_column_labels(),
cells_body(),
cells_stub())) |>
sub_missing(missing_text = "")
obs_chisq <- (25 - 21)^2 / 21 +
(10 - 14)^2 / 14 +
(5 - 9)^2 / 9 +
(10 - 6)^2 / 6
obs_chisq
(2 - 1) + (2 - 1)
chisq_crit <- qchisq(.95, df = (2 - 1) + (2 - 1))
df <- (3 - 1) * (2 - 1)
df
qchisq(.95, df)
chisq_crit <- qchisq(.95, df = (2 - 1) * (2 - 1))
obs_chisq <- (25 - 21)^2 / 21 +
(10 - 14)^2 / 14 +
(5 - 9)^2 / 9 +
(10 - 6)^2 / 6
obs_chisq
chisq_crit
obs_chisq > chisq_crit
data.frame(`In-State` = c(25, 5),
`Out-of-State` = c(10, 10)) |>
chisq.test()
matrix(25, 10, 5, 10, nrow = 2, byrow = T)
matrix(c(25, 10, 5, 10), nrow = 2, byrow = T)
chisq.test(matrix(c(25, 10, 5, 10), nrow = 2, byrow = T))
obs_chisq
matrix(c(21, 14, 9, 6), nrow = 2, byrow = T)
chisq.test(matrix(c(25, 10, 5, 10), nrow = 2, byrow = T),
p = matrix(c(21, 14, 9, 6), nrow = 2, byrow = T))
obs_chisq
matrix(c(25, 10, 5, 10)
matrix(c(25, 10, 5, 10), nrow = 2, byrow = T)
matrix(c(21, 14, 9, 6), nrow = 2, byrow = T)
obs_chisq
chisq.test(matrix(c(25, 10,
5, 10), nrow = 2, byrow = T))
chisq.test(matrix(c(25, 10,
5, 10), nrow = 2, byrow = T),
correct = F)
chisq.test(matrix(c(25, 10,
5, 10), nrow = 2, byrow = T),
p = matrix(c(21, 14,
9, 6), nrow = 2, byrow = T)
correct = F)
chisq.test(matrix(c(25, 10,
5, 10), nrow = 2, byrow = T),
p = matrix(c(21, 14,
9, 6), nrow = 2, byrow = T),
correct = F)
chisq.test(matrix(c(25, 10,
5, 10), nrow = 2, byrow = T),
correct = F)
,
data.frame(`In-State` = c(25, 5),
`Out-of-State` = c(10, 10)) |>
chisq.test()
data.frame(`In-State` = c(25, 5),
`Out-of-State` = c(10, 10)) |>
chisq.test(correct = F)
data.frame(type = c("Undergrad", "Graduate", "Total"),
`In-State` = c(25, 5, 30),
`Out-of-State` = c(10, 10, 20),
Total = c(35, 15, 50))
studdat <- data.frame(type = c("Undergrad", "Graduate", "Total"),
`In-State` = c(25, 5, 30),
`Out-of-State` = c(10, 10, 20),
Total = c(35, 15, 50))
studdat
studdat <- data.frame(type = c("Undergrad", "Graduate"),
`In-State` = c(25, 5),
`Out-of-State` = c(10, 10))
studdat
studdat |>
select(-type) |>
chisq.test(correct = F)
data.frame(color = sample(c("green", "red", "orange", "brown", prob = c(.1, .3, .5, .1))))
data.frame(color = sample(c("green", "red", "orange", "brown"), replace = T, prob = c(.1, .3, .5, .1)))
data.frame(color = sample(c("green", "red", "orange", "brown"), size = 20, replace = T, prob = c(.1, .3, .5, .1)))
data.frame(color = sample(c("green", "red", "orange", "brown"), size = 200, replace = T, prob = c(.1, .3, .5, .1)))
data.frame(color = sample(c("green", "red", "orange", "brown"),
size = 200, replace = T,
prob = c(.1, .3, .5, .1)))
data.frame(prob = rnorm(10))
qnorm(.9)
qnorm(1)
data.frame(prob = rnorm(10),
color = case_when(prob < qnorm(.1) ~ "green",
prob < qnorm(.4) ~ "red",
prob < qnorm(.9) ~ "orange",
prob < qnorm(.9999) ~ "brown"))
data.frame(prob = rnorm(10)) |>
mutate(color = case_when(prob < qnorm(.1) ~ "green",
prob < qnorm(.4) ~ "red",
prob < qnorm(.9) ~ "orange",
prob < qnorm(.9999) ~ "brown"))
leaves <- data.frame(prob = rnorm(10)) |>
mutate(color = case_when(prob < qnorm(.1) ~ "green",
prob < qnorm(.4) ~ "red",
prob < qnorm(.9) ~ "orange",
prob < qnorm(.9999) ~ "brown"))
leaves$color |> count()
leaves |>
summarize(.by = leaves,
n = n())
leaves |>
summarize(.by = color,
n = n())
leaves <- data.frame(prob = rnorm(10000)) |>
mutate(color = case_when(prob < qnorm(.1) ~ "green",
prob < qnorm(.4) ~ "red",
prob < qnorm(.9) ~ "orange",
prob < qnorm(.9999) ~ "brown"))
leaves |>
summarize(.by = color,
n = n())
leaves <- data.frame(prob = rnorm(10000)) |>
mutate(color = case_when(prob < qnorm(.1) ~ "green",
prob < qnorm(.4) ~ "red",
prob < qnorm(.9) ~ "orange",
prob < qnorm(1) ~ "brown"))
leaves |>
summarize(.by = color,
n = n())
3 < Inf
leaves <- data.frame(prob = rnorm(10000)) |>
mutate(color = case_when(prob < qnorm(.1) ~ "green",
prob < qnorm(.4) ~ "red",
prob < qnorm(.9) ~ "orange",
prob < qnorm(1) ~ "brown"),
fallen = case_when(prob < qnorm(.5) ~ "not fallen",
.default = "fallen"))
leaves |>
summarize(.by = color,
n = n())
leaves
leaves <- data.frame(prob = rnorm(10000)) |>
mutate(color = case_when(prob < qnorm(.1) ~ "green",
prob < qnorm(.4) ~ "red",
prob < qnorm(.9) ~ "orange",
prob < qnorm(1) ~ "brown"),
fallen = ifelse(prob + rnorm(1, 0, .5) < qnorm(.3), "no", "yes"))
table(leaves)
table(leaves$fallen, leaves$color)
leaves <- data.frame(prob = rnorm(10000)) |>
mutate(color = case_when(prob < qnorm(.1) ~ "green",
prob < qnorm(.4) ~ "red",
prob < qnorm(.9) ~ "orange",
prob < qnorm(1) ~ "brown"),
fallen = ifelse(prob + rnorm(1, 0) < qnorm(.3), "no", "yes"))
table(leaves$fallen, leaves$color)
rnorm()
leaves <- data.frame(prob = rnorm(10000)) |>
mutate(color = case_when(prob < qnorm(.1) ~ "green",
prob < qnorm(.4) ~ "red",
prob < qnorm(.9) ~ "orange",
prob < qnorm(1) ~ "brown"),
fallen = ifelse(prob + rnorm(1) < qnorm(.3), "no", "yes"))
table(leaves$fallen, leaves$color)
leaves <- data.frame(prob = rnorm(10000)) |>
mutate(color = case_when(prob < qnorm(.1) ~ "green",
prob < qnorm(.4) ~ "red",
prob < qnorm(.9) ~ "orange",
prob < qnorm(1) ~ "brown"),
fallen = case_when(color == "green" ~ sample(c("no", "yes"), prob = c(.9, .1)),
color == "red" ~ sample(c("no", "yes"), prob = c(.7, .3)),
color == "orange" ~ sample(c("no", "yes"), prob = c(.5, .5)),
color == "brown" ~ sample(c("no", "yes"), prob = c(.3, .7))))
?sample
leaves <- data.frame(prob = rnorm(10000)) |>
mutate(color = case_when(prob < qnorm(.1) ~ "green",
prob < qnorm(.4) ~ "red",
prob < qnorm(.9) ~ "orange",
prob < qnorm(1) ~ "brown"),
fallen = case_when(color == "green" ~ sample(c("no", "yes"), 1, prob = c(.9, .1)),
color == "red" ~ sample(c("no", "yes"), 1, prob = c(.7, .3)),
color == "orange" ~ sample(c("no", "yes"), 1, prob = c(.5, .5)),
color == "brown" ~ sample(c("no", "yes"), 1, prob = c(.3, .7))))
table(leaves$fallen, leaves$color)
leaves <- data.frame(prob = rnorm(1000)) |>
mutate(color = case_when(prob < qnorm(.1) ~ "green",
prob < qnorm(.4) ~ "red",
prob < qnorm(.9) ~ "orange",
prob < qnorm(1) ~ "brown"),
fallen = case_when(color == "green" ~ sample(c("no", "yes"), 1, prob = c(.9, .1)),
color == "red" ~ sample(c("no", "yes"), 1, prob = c(.7, .3)),
color == "orange" ~ sample(c("no", "yes"), 1, prob = c(.5, .5)),
color == "brown" ~ sample(c("no", "yes"), 1, prob = c(.3, .7))))
table(leaves$fallen, leaves$color)
sample(c("no", "yes"), 1, prob = c(.9, .1))
sample(c("no", "yes"), 1, prob = c(.9, .1))
sample(c("no", "yes"), 1, prob = c(.9, .1))
sample(c("no", "yes"), 1, prob = c(.9, .1))
sample(c("no", "yes"), 1, prob = c(.9, .1))
leaves <- data.frame(prob = rnorm(1000)) |>
mutate(color = case_when(prob < qnorm(.1) ~ "green",
prob < qnorm(.4) ~ "red",
prob < qnorm(.9) ~ "orange",
prob < qnorm(1) ~ "brown"),
fallen = case_when(color == "green" ~ sample(c("no", "yes"), 1, prob = c(.9, .1)),
color == "red" ~ sample(c("no", "yes"), 1, prob = c(.7, .3)),
color == "orange" ~ sample(c("no", "yes"), 1, prob = c(.5, .5)),
color == "brown" ~ sample(c("no", "yes"), 1, prob = c(.3, .7))))
table(leaves$fallen, leaves$color)
leaves <- data.frame(prob = rnorm(1000)) |>
mutate(color = case_when(prob < qnorm(.1) ~ "green",
prob < qnorm(.4) ~ "red",
prob < qnorm(.9) ~ "orange",
prob < qnorm(1) ~ "brown"),
fallen = case_when(color == "green" ~ sample(c("no", "yes"), 1, prob = c(.9, .1)),
color == "red" ~ sample(c("no", "yes"), 1, prob = c(.7, .3)),
color == "orange" ~ sample(c("no", "yes"), 1, prob = c(.5, .5)),
color == "brown" ~ sample(c("no", "yes"), 1, prob = c(.3, .7))))
table(leaves$fallen, leaves$color)
leaves <- data.frame(prob = rnorm(1000)) |>
mutate(color = case_when(prob < qnorm(.1) ~ "green",
prob < qnorm(.4) ~ "red",
prob < qnorm(.9) ~ "orange",
prob < qnorm(1) ~ "brown")) |>
mutate(.by = color,
fallen = case_when(color == "green" ~ sample(c("no", "yes"), n(), replace = T, prob = c(.9, .1)),
color == "red" ~ sample(c("no", "yes"), n(), replace = T, prob = c(.7, .3)),
color == "orange" ~ sample(c("no", "yes"), n(), replace = T, prob = c(.5, .5)),
color == "brown" ~ sample(c("no", "yes"), n(), replace = T, prob = c(.3, .7))))
table(leaves$fallen, leaves$color)
leaves <- data.frame(prob = rnorm(1000)) |>
mutate(color = case_when(prob < qnorm(.1) ~ "green",
prob < qnorm(.4) ~ "red",
prob < qnorm(.9) ~ "orange",
prob < qnorm(1) ~ "brown") |>
factor(levels = c("green", "red", "orange", "brown"))) |>
mutate(.by = color,
fallen = case_when(color == "green" ~ sample(c("no", "yes"), n(), replace = T, prob = c(.9, .1)),
color == "red" ~ sample(c("no", "yes"), n(), replace = T, prob = c(.7, .3)),
color == "orange" ~ sample(c("no", "yes"), n(), replace = T, prob = c(.5, .5)),
color == "brown" ~ sample(c("no", "yes"), n(), replace = T, prob = c(.3, .7))))
table(leaves$fallen, leaves$color)
leaves
leaves <- data.frame(prob = rnorm(1000)) |>
mutate(color = case_when(prob < qnorm(.1) ~ "green",
prob < qnorm(.4) ~ "red",
prob < qnorm(.9) ~ "orange",
prob < qnorm(1) ~ "brown") |>
factor(levels = c("green", "red", "orange", "brown"))) |>
mutate(.by = color,
fallen = case_when(color == "green" ~ sample(c("no", "yes"), n(), replace = T, prob = c(.9, .1)),
color == "red" ~ sample(c("no", "yes"), n(), replace = T, prob = c(.7, .3)),
color == "orange" ~ sample(c("no", "yes"), n(), replace = T, prob = c(.5, .5)),
color == "brown" ~ sample(c("no", "yes"), n(), replace = T, prob = c(.3, .7)))) |>
select(-prob)
leaves
write.csv(leaves, here::here("labs", "Lab 12 - Chi-Squared Test", "leaves.csv"))
leaves <- rio::import(here::here("labs", "Lab 12 - Chi-Squared Test"))
leaves <- rio::import(here::here("labs", "Lab 12 - Chi-Squared Test", "leaves.csv"))
leaves <- rio::import(here::here("labs", "Lab 12 - Chi-Squared Test", "leaves.csv"))
sample.int(1e10, 12)
library(tidyverse)
qt(.95, df = 3)
qt(.95, df = 37)
.95/2
(1-.05)/2
(1-.95)/2
c((1-.95)/2, .95 + (1-.95)/2)
qt(c(.025, .975), df = 3)
qt(c(.025, .975), df = 37)
qt(p = c(.025, .975), df = 37)
candy <- rio::import(here::here("labs", "Lab 11 - Independent and Paired Samples T-Test"))
candy <- rio::import(here::here("labs", "Lab 11 - Independent and Paired Samples T-Test", "candy.csv"))
candy <- rio::import(here::here("labs", "Lab 11 - Independent and Paired Sample T-Test", "candy.csv"))
candy <- rio::import(here::here("labs", "Lab 11 - Independent and Paired Sample T-Test", "candydata.csv"))
summary()
summary(candy)
View(candy)
candy$sales
ccorn <- candy |>
filter(candy == "candy corn")
View(ccorn)
ccorn <- candy |>
filter(candy == "candy corn") |>
select(sales)
ccorn
ccorn <- candy |>
filter(candy == "candy corn") |>
select(sales) |> mean()
ccorn <- candy |>
filter(candy == "candy corn") |>
pluck("sales")
ccorn
choc <- candy |>
filter(candy == "chocolate") |>
pluck("sales")
ccorn
choc
x_bar_ccorn <- mean(ccorn)
x_bar_ccorn
x_bar_choc <- mean(choc)
x_bar_choc
n_ccorn <- length(ccorn)
n_choc <- length(choc)
n_ccorn
n_choc
sd_ccorn <- sd(ccorn)
sd_choc <- sd(choc)
s_pooled <- sqrt( ((n_ccorn - 1) * sd_ccorn + (n_choc - 1) * sd_choc) /
(n_ccorn + n_choc - 2))
s_pooled
s_pooled <- sqrt( ((n_ccorn - 1) * sd_ccorn^2 + (n_choc - 1) * sd_choc^2) /
(n_ccorn + n_choc - 2))
s_pooled
# or
s_pooled <- sqrt( (sd_ccorn^2 + sd_choc^2 /
2) )
# or
s_pooled <- sqrt( (sd_ccorn^2 + sd_choc^2) / 2 )
# or
s_pooled <- sqrt( (sd_ccorn^2 + sd_choc^2) / 2 )
s_pooled
s_pooled <- sqrt( ((n_ccorn - 1) * sd_ccorn^2 + (n_choc - 1) * sd_choc^2) /
(n_ccorn + n_choc - 2))
df <- n_ccorn + n_choc - 2
qt(c(.025, .975), df = df)
t_stat <- (x_bar_ccorn - x_bar_choc) / (s_pooled * sqrt(1 / n_ccorn + 1 / n_choc))
t_stat
t.test(sales ~ candy, data = candy)
?t.test
t.test(sales ~ candy, data = candy, var.equal = T)
?t.test
t.test(sales ~ candy, data = candy, var.equal = T)$estimate
t.test(sales ~ candy, data = candy, var.equal = T)$statistic
t.test(sales ~ candy, data = candy, var.equal = T)$statistic |> unname()
pumpkin <- rio::import(here::here("labs", "Lab 11 - Independent and Paired Sample T-Test", "pumpkindata.csv"))
View(pumpkin)
pumpkin <- rio::import(here::here("labs", "Lab 11 - Independent and Paired Sample T-Test", "pumpkindata.csv"))
pumpkin
pumpkin <- rio::import(here::here("labs", "Lab 11 - Independent and Paired Sample T-Test", "pumpkindata.csv")) |>
mutate(diff = Oct31 - Oct1)
pumpkin
mean_diff <- mean(pumpkin$diff)
mean_diff
sd_diff <- sd(pumpkin$diff)
sd_diff
n_diff <- length(pumpkin$diff)
df <- n_diff - 1
qt(c(.025, .975), df)
t_stat <- (mean_diff - 0) / (sd_diff / sqrt(n_diff))
t_stat
t.test(pumpkin$Oct1, pumpkin$Oct31, var.equal = T, paired = T)
pumpkin |>
pivot_longer(!pumpkin,
names_to = "date", values_to = "weight")
pumpkin_long <- pumpkin |>
pivot_longer(!pumpkin,
names_to = "date", values_to = "weight")
t.test(weight ~ date, pumpkin_long, var.equal = T, paired = T)
(x_bar_ccorn - x_bar_choc) / sd_pooled
(x_bar_ccorn - x_bar_choc) / s_pooled
t.test(pumpkin$Oct1, pumpkin$Oct31, paired = T, var.equal = T)
t.test(pumpkin$Oct1, pumpkin$Oct31, paired = T)
qt(.95, df = 3)
qt(.95, df = 37)
(1 - .95)
(1 - .95)/2
c((1 - .95)/2, (1 - .95)/2 + .95)
qt(c(.025, .975), df = 3)
qt(c(.025, .975), df = 37)
library(tidyverse)
candy <- rio::import(here::here("labs", "Lab 11 - Independent and Paired Sample T-Test",
"candydata.csv"))
View(candy)
candy$sales
candy |>
filter(candy == "candy corn")
candy |>
filter(candy == "candy corn") |>
pluck("sales")
ccorn <- candy |>
filter(candy == "candy corn") |>
pluck("sales")
choc <- candy |>
filter(candy == "chocolate") |>
pluck("sales")
choc
x_bar_ccorn <- mean(ccorn)
x_bar_ccorn
sd_ccorn <- sd(ccorn)
sd_ccorn
n_ccorn <- length(ccorn)
x_bar_choc <- mean(choc)
x_bar_choc
x_bar_ccorn <- mean(ccorn)
sd_ccorn <- sd(ccorn)
n_ccorn <- length(ccorn)
x_bar_choc <- mean(choc)
sd_choc <- sd(choc)
n_choc <- length(choc)
sd_choc
sd_ccorn
n_ccorn
n_choc
pooled_sd <- sqrt( ((n_ccorn - 1) * sd_ccorn^2 + (n_choc - 1) * sd_choc^2) /
((n_ccorn - 1) + (n_choc - 1)))
pooled_sd
sqrt( (sd_ccorn^2 + sd_choc^2) / 2 )
df <- (n_ccorn - 1) + (n_choc - 1)
qt(c(.025, .975) df = df)
qt(c(.025, .975), df = df)
o
t_stat <- (x_bar_ccorn - x_bar_choc) /
(pooled_sd * sqrt(1 / n_ccorn + 1 / n_choc))
t_stat
t.test(sales ~ candy, data = candy)
t_stat
?t.test
t.test(sales ~ candy, data = candy, var.equal = T)
pumpkin <- rio::import(here::here("labs", "Lab 11 - Independent and Paired Sample T-Test",
"pumpkindata.csv"))
View(pumpkin)
pumpkin <- rio::import(here::here("labs", "Lab 11 - Independent and Paired Sample T-Test",
"pumpkindata.csv")) |>
mutate(diff = Oct31 - Oct1)
diff_mean <- mean(pumpkin$diff)
diff_mean
diff_sd <- sd(pumpkin$diff)
n_diff <- length(pumpkin$diff)
diff_sd
n_diff
df <- n_diff - 1
df
qt(c(.025, .975), df = df)
t_stat <- mean_diff / (sd_diff / sqrt(n_diff))
t_stat <- diff_mean / (diff_sd / sqrt(n_diff))
t_stat
t.stat(pumpkin$Oct1, pumpkin$Oct31, var.equal = T, paired = T)
t.test(pumpkin$Oct1, pumpkin$Oct31, var.equal = T, paired = T)
t_stat
